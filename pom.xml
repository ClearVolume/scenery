<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.scijava</groupId>
        <artifactId>pom-scijava</artifactId>
        <version>28.0.0</version>
    </parent>

    <groupId>graphics.scenery</groupId>
    <artifactId>scenery</artifactId>
    <version>0.7.0-beta-8-SNAPSHOT</version>

    <name>scenery</name>
    <description>flexible scenegraphing and rendering for scientific visualisation</description>
    <url>http://scenery.graphics</url>
    <inceptionYear>2016</inceptionYear>
    <organization>
        <name>scenery</name>
        <url>http://scenery.graphics</url>
    </organization>
    <licenses>
        <license>
            <name>GNU Lesser General Public License v3+</name>
            <url>https://www.gnu.org/licenses/lgpl.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>skalarproduktraum</id>
            <name>Ulrik Guenther</name>
            <url>https://ulrik.is/writing</url>
            <roles>
                <role>founder</role>
                <role>lead</role>
                <role>developer</role>
                <role>debugger</role>
                <role>reviewer</role>
                <role>support</role>
                <role>maintainer</role>
            </roles>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>Kyle Harrington</name>
            <url>http://www.kyleharrington.com</url>
            <properties><id>kephale</id></properties>
        </contributor>
        <contributor>
            <name>Tobias Pietzsch</name>
            <url>https://imagej.net/User:Pietzsch</url>
            <properties><id>tpietzsch</id></properties>
        </contributor>
        <contributor>
            <name>Loic Royer</name>
            <properties><id>royerloic</id></properties>
        </contributor>
        <contributor>
            <name>Martin Weigert</name>
            <properties><id>maweigert</id></properties>
        </contributor>
        <contributor>
            <name>Aryaman Gupta</name>
            <properties><id>aryaman-gupta</id></properties>
        </contributor>
    </contributors>

    <mailingLists>
        <mailingList>
            <name>none</name>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:git:git://github.com/scenerygraphics/scenery</connection>
        <developerConnection>scm:git:git@github.com:scenerygraphics/scenery</developerConnection>
        <tag>scenery-0.7.0-beta-3</tag>
        <url>http://scenery.graphics</url>
    </scm>
    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/scenerygraphics/scenery/issues</url>
    </issueManagement>
    <ciManagement>
        <system>Travis</system>
        <url>https://travis-ci.org/scenerygraphics/scenery/</url>
    </ciManagement>
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <properties>
        <package-name>graphics.scenery</package-name>

        <scijava.jvm.version>1.8</scijava.jvm.version>
        <javac.target>1.8</javac.target>
        <kotlin.version>1.4-M1</kotlin.version>
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <dokka.version>0.10.0</dokka.version>
        <dokka.skip>true</dokka.skip>

        <bigdataviewer-core.version>7.0.0</bigdataviewer-core.version>
        <bigvolumeviewer.version>0.1.8</bigvolumeviewer.version>
        <cleargl.version>2.2.10</cleargl.version>
        <coremem.version>0.4.6</coremem.version>
        <ffmpeg.version>4.2.1-1.5.2</ffmpeg.version>
        <gluegen-rt.version>${gluegen-rt-main.version}</gluegen-rt.version>
        <jackson-databind.version>2.9.10.1</jackson-databind.version>
        <jackson-dataformat-msgpack.version>0.8.16</jackson-dataformat-msgpack.version>
        <jackson-dataformat-yaml.version>2.9.9</jackson-dataformat-yaml.version>
        <jackson-module-kotlin.version>2.9.9</jackson-module-kotlin.version>
        <jeromq.version>0.4.3</jeromq.version>
        <jinput.version>2.0.9</jinput.version>
        <jna-platform.version>4.5.2</jna-platform.version>
        <jna.version>4.5.2</jna.version>
        <jocl.version>2.0.1</jocl.version>
        <jogl-all.version>${jogl.version}</jogl-all.version>
        <jvrpn.version>1.1.0</jvrpn.version>
        <kotlinx-coroutines-core.version>1.3.5-1.4-M1</kotlinx-coroutines-core.version>
        <kryo.version>4.0.2</kryo.version>
        <lwjgl.version>3.2.3</lwjgl.version>
        <lwjgl3-awt.version>0.1.7</lwjgl3-awt.version>
        <msgpack-core.version>0.8.16</msgpack-core.version>
        <reflections.version>0.9.11</reflections.version>
        <script-editor.version>0.5.3</script-editor.version>
        <slf4j.version>1.7.25</slf4j.version>
        <spirvcrossj.version>0.7.0-1.1.106.0</spirvcrossj.version>
        <trove4j.version>3.0.3</trove4j.version>

        <lwjgl.natives>natives-${scijava.platform.family.long}</lwjgl.natives>

        <license.licenseName>lgpl_v3</license.licenseName>
        <license.copyrightOwners>the scenery development team</license.copyrightOwners>

        <!-- TODO: Remove after https://github.com/tpietzsch/jogl-minimal/pull/9 is merged
             and duplicate classes are cleaned up -->
        <enforcer.skip>True</enforcer.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx-coroutines-core.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt</artifactId>
            <version>${gluegen-rt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt</artifactId>
            <version>${gluegen-rt.version}</version>
            <classifier>natives-linux-amd64</classifier>
        </dependency>
        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt</artifactId>
            <version>${gluegen-rt.version}</version>
            <classifier>natives-linux-i586</classifier>
        </dependency>
        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt</artifactId>
            <version>${gluegen-rt.version}</version>
            <classifier>natives-macosx-universal</classifier>
        </dependency>
        <dependency>
            <groupId>org.jogamp.gluegen</groupId>
            <artifactId>gluegen-rt</artifactId>
            <version>${gluegen-rt.version}</version>
            <classifier>natives-windows-amd64</classifier>
        </dependency>

        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all</artifactId>
            <version>${jogl-all.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all</artifactId>
            <version>${jogl-all.version}</version>
            <classifier>natives-linux-amd64</classifier>
        </dependency>
        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all</artifactId>
            <version>${jogl-all.version}</version>
            <classifier>natives-linux-i586</classifier>
        </dependency>
        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all</artifactId>
            <version>${jogl-all.version}</version>
            <classifier>natives-macosx-universal</classifier>
        </dependency>
        <dependency>
            <groupId>org.jogamp.jogl</groupId>
            <artifactId>jogl-all</artifactId>
            <version>${jogl-all.version}</version>
            <classifier>natives-windows-amd64</classifier>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.clearvolume</groupId>
            <artifactId>cleargl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.joml</groupId>
            <artifactId>joml</artifactId>
            <version>1.9.22</version>
        </dependency>

        <dependency>
            <groupId>com.github.scenerygraphics</groupId>
            <artifactId>vector</artifactId>
            <version>958f2e6</version>
        </dependency>

        <dependency>
            <groupId>net.clearcontrol</groupId>
            <artifactId>coremem</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.google.android.tools</groupId>
                    <artifactId>dx</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>net.java.jinput</groupId>
            <artifactId>jinput</artifactId>
            <version>${jinput.version}</version>
        </dependency>

        <dependency>
            <groupId>net.java.jinput</groupId>
            <artifactId>jinput</artifactId>
            <version>${jinput.version}</version>
            <classifier>natives-all</classifier>
        </dependency>

        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>scijava-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>script-editor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>ui-behaviour</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.trove4j</groupId>
            <artifactId>trove4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>scripting-javascript</artifactId>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>${jna-platform.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jocl</groupId>
            <artifactId>jocl</artifactId>
            <version>${jocl.version}</version>
        </dependency>

        <!-- LWJGL dependencies START -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-jemalloc</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-vulkan</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <!-- Removed for the moment because of non-existent binaries for Linux and Windows
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-vulkan</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>
        -->
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-openvr</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-xxhash</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-opengl</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-glfw</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-jemalloc</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-openvr</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl-xxhash</artifactId>
            <version>${lwjgl.version}</version>
            <classifier>${lwjgl.natives}</classifier>
        </dependency>
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl-remotery</artifactId>
			<version>${lwjgl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.lwjgl</groupId>
			<artifactId>lwjgl-remotery</artifactId>
			<version>${lwjgl.version}</version>
			<classifier>${lwjgl.natives}</classifier>
		</dependency>
		<!-- LWJGL dependencies END -->

        <!-- jackson dependencies -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson-module-kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson-dataformat-yaml.version}</version>
        </dependency>

        <!-- jackson dependencies end -->
        <dependency>
            <groupId>graphics.scenery</groupId>
            <artifactId>spirvcrossj</artifactId>
            <version>${spirvcrossj.version}</version>
        </dependency>

        <dependency>
            <groupId>graphics.scenery</groupId>
            <artifactId>spirvcrossj</artifactId>
            <version>${spirvcrossj.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- ZeroMQ dependencies start -->
        <dependency>
            <groupId>org.zeromq</groupId>
            <artifactId>jeromq</artifactId>
            <version>${jeromq.version}</version>
        </dependency>
        <!-- ZeroMQ dependencies end -->

        <dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>kryo</artifactId>
            <version>${kryo.version}</version>
        </dependency>

        <dependency>
            <groupId>org.msgpack</groupId>
            <artifactId>msgpack-core</artifactId>
            <version>${msgpack-core.version}</version>
        </dependency>

        <dependency>
            <groupId>org.msgpack</groupId>
            <artifactId>jackson-dataformat-msgpack</artifactId>
            <version>${jackson-dataformat-msgpack.version}</version>
        </dependency>

        <dependency>
            <groupId>graphics.scenery</groupId>
            <artifactId>jvrpn</artifactId>
            <version>${jvrpn.version}</version>
        </dependency>

        <dependency>
            <groupId>graphics.scenery</groupId>
            <artifactId>jvrpn</artifactId>
            <version>${jvrpn.version}</version>
            <classifier>${lwjgl.natives}</classifier>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.scif</groupId>
            <artifactId>scifio</artifactId>
        </dependency>

        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>${ffmpeg.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>${ffmpeg.version}</version>
            <classifier>linux-x86_64</classifier>
        </dependency>
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>${ffmpeg.version}</version>
            <classifier>macosx-x86_64</classifier>
        </dependency>
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>${ffmpeg.version}</version>
            <classifier>windows-x86_64</classifier>
        </dependency>

        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>

        <dependency>
                <groupId>sc.fiji</groupId>
                <artifactId>bigvolumeviewer</artifactId>
                <version>${bigvolumeviewer.version}</version>
        </dependency>

        <dependency>
            <groupId>org.lwjglx</groupId>
            <artifactId>lwjgl3-awt</artifactId>
            <version>${lwjgl3-awt.version}</version>
        </dependency>

        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>imagej</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>ij</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-ij</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.janelia.saalfeldlab</groupId>
            <artifactId>n5</artifactId>
            <version>2.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.janelia.saalfeldlab</groupId>
            <artifactId>n5-imglib2</artifactId>
            <version>3.4.1</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>scijava.public</id>
            <url>https://maven.scijava.org/content/groups/public</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>bintray.kotlin.eap</id>
            <name>Bintray Kotlin EAP Repository</name>
            <url>https://dl.bintray.com/kotlin/kotlin-eap</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>bintray.kotlin.eap</id>
            <name>Bintray Kotlin EAP Repository</name>
            <url>https://dl.bintray.com/kotlin/kotlin-eap</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/tests</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals> <goal>compile</goal> </goals>
                        <configuration>
                            <sourceDirs>
                                <source>src/main/kotlin</source>
                                <source>target/generated-sources/kapt</source>
                                <source>target/generated-sources/kaptKotlin</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals> <goal>test-compile</goal> </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/tests</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>${dokka.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>dokka</goal>
                            <goal>javadocJar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputFormat>javadoc</outputFormat>
                    <outputDir>target/javadoc</outputDir>
                    <jdkVersion>8</jdkVersion>
                    <sourceLinks>
                        <link>
                            <path>${project.basedir}/src/main/kotlin</path>
                            <url>https://github.com/scenerygraphics/scenery</url>
                            <lineSuffix>#L</lineSuffix>
                        </link>
                    </sourceLinks>
                    <skip>${dokka.skip}</skip>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals> <goal>compile</goal> </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals> <goal>testCompile</goal> </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>dokka:javadocJar deploy</goals>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
                    </systemPropertyVariables>
                    <argLine>@{argLine} -Xmx8192m</argLine>
                    <forkCount>1</forkCount>
                    <reuseForks>true</reuseForks>
                    <includes>
                        <include>**/*Tests.*</include>
                    </includes>

                    <excludes>
                        <exclude>**/*Example.*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <configuration>
                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                    <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
                            </systemPropertyVariables>
                            <argLine>@{argLine} -Xmx8192m</argLine>
                            <forkCount>1</forkCount>
                            <reuseForks>true</reuseForks>

                            <excludes>
                                <exclude>**/*Example.*</exclude>
                            </excludes>

                            <includes>
                                <include>**/*Tests.*</include>
                                <include>**/*ExampleRunner.*</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile> 
            <id>release</id>
            <properties>
                <dokka.skip>false</dokka.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-shader-date-comparison</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>${project.basedir}/src/main/resources/graphics/scenery/backends/shaders/check-dates.sh</executable>
                            <workingDirectory>${project.basedir}/src/main/resources/graphics/scenery/backends/shaders</workingDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>js</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <version>${kotlin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>js</goal>
                                </goals>
                                <configuration>
                                    <outputFile>${project.build.outputDirectory}/${project.artifactId}.js</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>false</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
